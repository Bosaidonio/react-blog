
#user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
  worker_connections 1024;
}


http {
  include mime.types;
  default_type application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;
  sendfile on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout 65;

  #gzip  on;

  server {
    listen 80;
    #	server_name cdn.mariowork.com;
    server_name www.mariowork.com mariowork.com;
    # return 301 https://www.mariowork.com/;
    #access_log  logs/host.access.log  main;
    #rewrite ^(.*)$ https://$host$1; #将所有HTTP请求通过rewri指令重定向到HTTPS。
    #return  301 https://$server_name$request_uri;
    location / {
      root /etc/nginx/html;
      try_files $uri $uri/ /index.html;
      index index.html index.htm;
    }
    #location / {
    #  root   /opt/REACT_DEMO;
    #    index  index.html index.htm;
    # }
    # add_header Access-Control-Allow-Origin *;

    # location /easymock/ {
    #   proxy_pass http://localhost:8080;
    # }
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #    error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #    root   html;
    # }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
  }


  # another virtual host using mix of IP-, name-, and port-based configuration
  #
  #server {
  #    listen       8000;
  #    listen       somename:8080;
  #    server_name  somename  alias  another.alias;
  #    location / {
  #        root   html;
  #        index  index.html index.htm;
  #    }
  #}
  # HTTPS server
  #
  #server {
  #    listen       443 ssl;
  #    server_name  localhost;
  #    ssl_certificate      cert.pem;
  #    ssl_certificate_key  cert.key;
  #    ssl_session_cache    shared:SSL:1m;
  #    ssl_session_timeout  5m;
  #    ssl_ciphers  HIGH:!aNULL:!MD5;
  #    ssl_prefer_server_ciphers  on;
  #    location / {
  #        root   html;
  #        index  index.html index.htm;
  #    }
  #
  # }
  #以下属性中，以ssl开头的属性表示与证书配置有关。
#   server {
#     listen 443 ssl;
#     #配置HTTPS的默认访问端口为443。
#     #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
#     #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
#     server_name www.mariowork.com; #需要将yourdomain.com替换成证书绑定的域名。
#     add_header Access-Control-Allow-Origin *; # 允许跨域
#     ssl_certificate /etc/nginx/cert/ssl.pem; # pem文件的路径
#     ssl_certificate_key /etc/nginx/cert/ssl.key; # key文件的路径 #需要将cert-file-name.pem替换成已上传的证书文件的名称。
#     ssl_session_timeout 5m;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#     #表示使用的加密套件的类型。
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
#     ssl_prefer_server_ciphers on;
#     location / {
#       root /etc/nginx/html;
#       try_files $uri $uri/ /index.html;
#       index index.html index.htm;
#     }
#     # location /blog {
#     #     alias /opt/BLOG;
#     #    try_files $uri $uri/ /index.html;

#     #   index index.html index.htm;
#     # }

#     # location /binjiang {
#     #	alias /opt/REACT_BINJIANG/binjiang;
#     #	try_files $uri $uri/ /binjiang/index.html;
#     #	index index.html index.htm
#     # }
#     # location /binjiang {
#     #   # root /opt/REACT_BINJIANG; # 会和location后边的路径进行拼接
#     #   alias /opt/REACT_BINJIANG; # 会替换location后边的地址
#     #   try_files $uri $uri/ /index.html;
#     #   index index.html index.htm;
#     # }
#     # location /app2 {
#     #  root /opt/Vue/App2;  #站点目录。
#     #   try_files $uri $uri/ /opt/Vue/App2/index.html;
#     #   index index.html index.htm;
#     # }

#     # location /static/images {
#     #   if ( $query_string ~* "filename=" ) {
#     #     add_header Access-Control-Allow-Origin *; # 允许跨域
#     #     add_header Content-Disposition attachment;
#     #   }
#     #   root /opt;
#     # }
#     #  location / {
#     #    proxy_pass  http://127.0.0.1:7300;
#     # proxy_redirect default ;
#     # }
#   }

}
